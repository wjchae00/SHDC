<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Methods" id="VIZPub_NET_Method">

    <chapter title="AttributeManager Methods" id="VIZPub_NET_method_am">
        <deflist id="VIZPub_NET_method_am_def" collapsible="true">
            <def title="ExportAttributeNeutralFile" collapsible="true">
                <code-block lang="c#">
                    public string ExportAttributeNeutralFile(
                    List&lt;AttributeItem&gt; items
                    )
                </code-block>
            </def>
            <def title="ExportAttributeNeutralFile - 여러 파일" collapsible="true">
                <code-block lang="c#">
                    public bool ExportAttributeNeutralFile(
                    List&lt;AttributeItem&gt; items,
                    string output
                    )
                </code-block>
            </def>
            <def title="GetAttributeFromExportedFile" collapsible="true">
                <code-block lang="c#">
                    public List&lt;AttributeItem&gt; GetAttributeFromExportedFile(
                    string path,
                    bool remove
                    )
                </code-block>
            </def>
        </deflist>
    </chapter>

    <chapter title="ModuleInitializer Methods" id="VIZPub_NET_method_mi2">
        <deflist id="VIZPub_NET_method_mi2_def" collapsible="true">
            <def title="CompareVersion">
                <code-block lang="c#">
                    public static bool CompareVersion()
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    private void InitLibrary()
                    {
                    //===================================
                    // Environment
                    //===================================
                    string assemblyPath = VIZPub.NET.ModuleInitializer.GetAssemblyLocation();
                    string entryAssemblyPath = VIZPub.NET.ModuleInitializer.GetEntryAssemblyLocation();

                    string assemblyVersion = VIZPub.NET.ModuleInitializer.GetLibraryVersion();
                    string interopVersion = VIZPub.NET.ModuleInitializer.GetInteropLibraryVersion();
                    bool compareVersion = VIZPub.NET.ModuleInitializer.CompareVersion();

                    bool existLibrary = VIZPub.NET.ModuleInitializer.ExistLibrary();

                    // Initialize VIZPub.NET
                    if(existLibrary == false || compareVersion == false)
                    VIZPub.NET.ModuleInitializer.Run();
                    }

                    private void InitLibraryAlways()
                    {
                    //===================================
                    // Environment
                    //===================================
                    string assemblyPath = VIZPub.NET.ModuleInitializer.GetAssemblyLocation();
                    string entryAssemblyPath = VIZPub.NET.ModuleInitializer.GetEntryAssemblyLocation();

                    string assemblyVersion = VIZPub.NET.ModuleInitializer.GetLibraryVersion();
                    string interopVersion = VIZPub.NET.ModuleInitializer.GetInteropLibraryVersion();
                    bool compareVersion = VIZPub.NET.ModuleInitializer.CompareVersion();

                    bool existLibrary = VIZPub.NET.ModuleInitializer.ExistLibrary();

                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ExportAttributeNeutralFile">
                <code-block lang="c#">
                    public bool ExportAttributeNeutralFile(
                    List&lt;AttributeItem&gt; items,
                    string output
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    private void InitLibrary()
                    {
                    //===================================
                    // Environment
                    //===================================
                    string assemblyPath = VIZPub.NET.ModuleInitializer.GetAssemblyLocation();
                    string entryAssemblyPath = VIZPub.NET.ModuleInitializer.GetEntryAssemblyLocation();

                    string assemblyVersion = VIZPub.NET.ModuleInitializer.GetLibraryVersion();
                    string interopVersion = VIZPub.NET.ModuleInitializer.GetInteropLibraryVersion();
                    bool compareVersion = VIZPub.NET.ModuleInitializer.CompareVersion();

                    bool existLibrary = VIZPub.NET.ModuleInitializer.ExistLibrary();

                    // Initialize VIZPub.NET
                    if(existLibrary == false || compareVersion == false)
                    VIZPub.NET.ModuleInitializer.Run();
                    }

                    private void InitLibraryAlways()
                    {
                    //===================================
                    // Environment
                    //===================================
                    string assemblyPath = VIZPub.NET.ModuleInitializer.GetAssemblyLocation();
                    string entryAssemblyPath = VIZPub.NET.ModuleInitializer.GetEntryAssemblyLocation();

                    string assemblyVersion = VIZPub.NET.ModuleInitializer.GetLibraryVersion();
                    string interopVersion = VIZPub.NET.ModuleInitializer.GetInteropLibraryVersion();
                    bool compareVersion = VIZPub.NET.ModuleInitializer.CompareVersion();

                    bool existLibrary = VIZPub.NET.ModuleInitializer.ExistLibrary();

                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="GetAssemblyLocation">
                <code-block lang="c#">
                    public static string GetAssemblyLocation()
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    private void PrintEnvironment()
                    {
                    string assemblyPath = VIZPub.NET.ModuleInitializer.GetAssemblyLocation();
                    string entryAssemblyPath = VIZPub.NET.ModuleInitializer.GetEntryAssemblyLocation();

                    string assemblyVersion = VIZPub.NET.ModuleInitializer.GetLibraryVersion();
                    string interopVersion = VIZPub.NET.ModuleInitializer.GetInteropLibraryVersion();
                    bool compareVersion = VIZPub.NET.ModuleInitializer.CompareVersion();

                    bool existLibrary = VIZPub.NET.ModuleInitializer.ExistLibrary();

                    }
                    }
                    }
                </code-block>
            </def>
            <def title="GetEntryAssemblyLocation">
                <code-block lang="c#">
                    public static string GetEntryAssemblyLocation()
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    private void PrintEnvironment()
                    {
                    string assemblyPath = VIZPub.NET.ModuleInitializer.GetAssemblyLocation();
                    string entryAssemblyPath = VIZPub.NET.ModuleInitializer.GetEntryAssemblyLocation();

                    string assemblyVersion = VIZPub.NET.ModuleInitializer.GetLibraryVersion();
                    string interopVersion = VIZPub.NET.ModuleInitializer.GetInteropLibraryVersion();
                    bool compareVersion = VIZPub.NET.ModuleInitializer.CompareVersion();

                    bool existLibrary = VIZPub.NET.ModuleInitializer.ExistLibrary();

                    }
                    }
                    }
                </code-block>
            </def>
            <def title="GetInteropLibraryVersion">
                <code-block lang="c#">
                    public static string GetInteropLibraryVersion()
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    private void PrintEnvironment()
                    {
                    string assemblyPath = VIZPub.NET.ModuleInitializer.GetAssemblyLocation();
                    string entryAssemblyPath = VIZPub.NET.ModuleInitializer.GetEntryAssemblyLocation();

                    string assemblyVersion = VIZPub.NET.ModuleInitializer.GetLibraryVersion();
                    string interopVersion = VIZPub.NET.ModuleInitializer.GetInteropLibraryVersion();
                    bool compareVersion = VIZPub.NET.ModuleInitializer.CompareVersion();

                    bool existLibrary = VIZPub.NET.ModuleInitializer.ExistLibrary();

                    }
                    }
                    }
                </code-block>
            </def>
            <def title="GetLibraryVersion">
                <code-block lang="c#">
                    public static string GetLibraryVersion()
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    private void PrintEnvironment()
                    {
                    string assemblyPath = VIZPub.NET.ModuleInitializer.GetAssemblyLocation();
                    string entryAssemblyPath = VIZPub.NET.ModuleInitializer.GetEntryAssemblyLocation();

                    string assemblyVersion = VIZPub.NET.ModuleInitializer.GetLibraryVersion();
                    string interopVersion = VIZPub.NET.ModuleInitializer.GetInteropLibraryVersion();
                    bool compareVersion = VIZPub.NET.ModuleInitializer.CompareVersion();

                    bool existLibrary = VIZPub.NET.ModuleInitializer.ExistLibrary();

                    }
                    }
                    }
                </code-block>
            </def>
            <def title="Run">
                <p>
                    VIZPub.NET 구동에 필요한 Library를 초기화 합니다.
                </p>
                <code-block lang="c#">
                    public static void Run()
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    private void InitLibrary()
                    {
                    //===================================
                    // Environment
                    //===================================
                    string assemblyPath = VIZPub.NET.ModuleInitializer.GetAssemblyLocation();
                    string entryAssemblyPath = VIZPub.NET.ModuleInitializer.GetEntryAssemblyLocation();

                    string assemblyVersion = VIZPub.NET.ModuleInitializer.GetLibraryVersion();
                    string interopVersion = VIZPub.NET.ModuleInitializer.GetInteropLibraryVersion();
                    bool compareVersion = VIZPub.NET.ModuleInitializer.CompareVersion();

                    bool existLibrary = VIZPub.NET.ModuleInitializer.ExistLibrary();

                    // Initialize VIZPub.NET
                    if(existLibrary == false || compareVersion == false)
                    VIZPub.NET.ModuleInitializer.Run();
                    }

                    private void InitLibraryAlways()
                    {
                    //===================================
                    // Environment
                    //===================================
                    string assemblyPath = VIZPub.NET.ModuleInitializer.GetAssemblyLocation();
                    string entryAssemblyPath = VIZPub.NET.ModuleInitializer.GetEntryAssemblyLocation();

                    string assemblyVersion = VIZPub.NET.ModuleInitializer.GetLibraryVersion();
                    string interopVersion = VIZPub.NET.ModuleInitializer.GetInteropLibraryVersion();
                    bool compareVersion = VIZPub.NET.ModuleInitializer.CompareVersion();

                    bool existLibrary = VIZPub.NET.ModuleInitializer.ExistLibrary();

                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="Run - 옵션">
                <p>
                    VIZPub.NET 구동에 필요한 Library를 초기화 합니다. 옵션에 따라 색상 테이블 (rev2bst.config.rev) 을 덮어쓰기 하지 않을 수 있습니다.
                </p>
                <code-block lang="c#">
                    public static void Run(
                    bool exceptColorTable
                    )
                </code-block>
            </def>
        </deflist>
    </chapter>

    <chapter title="PublishManager Methods" id="VIZPub_NET_method_pm">
        <deflist id="VIZPub_NET_method_pm_def" collapsible="true">
            <def title="ClearAttribute" collapsible="true">
                <code-block lang="c#">
                    public bool ClearAttribute(
                    string input,   //속성이 포함된 VIZ 파일 경로
                    string output   //속성이 제거된 VIZ 파일 저장 경로
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void Example()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    string input = "C:\\MODEL\\EQUIP.viz";
                    string output = "C:\\MODEL\\EQUIP_Without_Attribute.viz";

                    bool result = manager.ClearAttribute(input, output);

                    System.Diagnostics.Debug.WriteLine(string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds));
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(string.Format("{0} : {1}", e.Mode, e.Progress));
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ExportAttribute" collapsible="true">
                <code-block lang="c#">
                    public bool ExportAttribute(
                    string input,   //VIZ 파일 경로
                    string output   //속성 파일 경로
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void Example()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    string input = "C:\\MODEL\\ATTRIBUTE.viz";
                    string output = "C:\\MODEL\\ATTRIBUTE.txt";

                    bool result = manager.ExportAttribute(input, output);
                    if (result == false) return;

                    VIZPub.NET.AttributeManager attribute = new VIZPub.NET.AttributeManager();
                    List&lt;VIZPub.NET.AttributeItem&gt; items = attribute.GetAttributeFromExportedFile(output, true);

                    foreach (VIZPub.NET.AttributeItem item in items)
                    {
                    System.Diagnostics.Debug.WriteLine(string.Format("{0} - {1} : {2}", item.NodeId, item.AttributeKey, item.AttributeValue));
                    }
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(string.Format("{0} : {1}", e.Mode, e.Progress));
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ExportImage" collapsible="true">
                <code-block lang="c#">
                    public bool ExportImage(
                    string input,   //VIZ 파일 경로
                    string output,   //이미지 파일 경로
                    int width,   //이미지 가로 길이
                    int height,   //이미지 세로 길이
                    ViewDirections viewDirection,   //이미지 뷰 방향
                    ImageFormats imageFormat   //이미지 파일 형식
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void Example()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    string input = "C:\\MODEL\\SAMPLE.viz";
                    string output = "C:\\MODEL\\SAMPLE.png";

                    bool result = manager.ExportImage(
                    input                                   /* INPUT : VIZ */
                    , output                                /* OUTPUT : IMAGE */
                    , 600                                   /* IMAGE WIDTH */
                    , 480                                   /* IMAGE HEIGHT */
                    , VIZPub.NET.ViewDirections.ISO_PLUS    /* VIEW DIRECTION */
                    , VIZPub.NET.ImageFormats.PNG           /* OUTPUT FORMAT */
                    );

                    System.Diagnostics.Debug.WriteLine(
                    string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds)
                    );
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(string.Format("{0} : {1}", e.Mode, e.Progress));
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ExportImage - View Matrix" collapsible="true">
                <code-block lang="c#">
                    public bool ExportImage(
                    string input,   //VIZ 파일 경로
                    string output,   //이미지 파일 경로
                    int width,   //이미지 가로 길이
                    int height,   //이미지 세로 길이
                    ViewDirections viewDirection,   //이미지 뷰 방향
                    ImageFormats imageFormat,   //이미지 파일 형식
                    string matrix   //모델 매트릭스
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void Example()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    string input = "C:\\MODEL\\SAMPLE.viz";
                    string output = "C:\\MODEL\\SAMPLE.png";
                    string matrix = "1,0,0,0,0,-0.707277760452136,0.706935760567968,0,0,-0.706935760567968,-0.707277760452136,0,0,0,-12677.311229,1";

                    bool result = manager.ExportImage(
                    input                                   /* INPUT : VIZ */
                    , output                                /* OUTPUT : IMAGE */
                    , 600                                   /* IMAGE WIDTH */
                    , 480                                   /* IMAGE HEIGHT */
                    , VIZPub.NET.ViewDirections.ISO_PLUS    /* VIEW DIRECTION */
                    , VIZPub.NET.ImageFormats.PNG           /* OUTPUT FORMAT */
                    , matrix                                /* MATRIX */
                    );

                    System.Diagnostics.Debug.WriteLine(
                    string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds)
                    );
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(
                    string.Format("{0} : {1}", e.Mode, e.Progress)
                    );
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ExportMetadata" collapsible="true">
                <code-block lang="c#">
                    public bool ExportMetadata(
                    string input,   //VIZ 파일 경로
                    string output   //메타데이터(Metadata) 내보내기 경로
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void Example()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    string input = "C:\\MODEL\\SAMPLE.viz";
                    string output = "C:\\MODEL\\SAMPLE.metadata";

                    bool result = manager.ExportMetadata(
                    input       /* INPUT : VIZ */
                    , output    /* OUTPUT : TEXT */
                    );

                    System.Diagnostics.Debug.WriteLine(
                    string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds)
                    );
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(
                    string.Format("{0} : {1}", e.Mode, e.Progress)
                    );
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ExportNode" collapsible="true">
                <code-block lang="c#">
                    public bool ExportNode(
                    string input,   //VIZ 파일 경로
                    string outputDir,   //노드별 VIZ 파일 출력 경로(디렉토리)
                    ExportFileFormats fileFormat,   //내보내기 파일 형식
                    ExportNameFormats nameFormat,   //이름 명명 규칙
                    ExportNodeKind nodeKind   //내보내기 노드 유형
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void Example()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    string input = "C:\\MODEL\\SAMPLE.viz";
                    string output = "C:\\MODEL\\SAMPLE";

                    bool result = manager.ExportNode(
                    input                                       /* INPUT : VIZ */
                    , output                                    /* OUTPUT : DIRECTORY */
                    , VIZPub.NET.ExportFileFormats.VIZ          /* OUTPUT FORMAT */
                    , VIZPub.NET.ExportNameFormats.NODE_NAME    /* NAME FORMAT */
                    , VIZPub.NET.ExportNodeKind.ASSEMBLY_ONLY   /* NODE KIND */
                    );

                    System.Diagnostics.Debug.WriteLine(
                    string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds)
                    );
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(
                    string.Format("{0} : {1}", e.Mode, e.Progress)
                    );
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ExportNodeImage" collapsible="true">
                <code-block lang="c#">
                    public bool ExportNodeImage(
                    string input,   //VIZ 파일 경로
                    string output,  //이미지 파일 경로 (파일이름 미포함)
                    int width,      //이미지 가로 길이
                    int height,     //이미지 세로 길이
                    ViewDirections viewDirection,   //이미지 뷰 방향
                    ImageFormats imageFormat,       //이미지 파일 형식
                    ExportNameFormats nameType      //이름 규칙
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void Example()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    string input = "C:\\MODEL\\SAMPLE.viz";
                    string output = "C:\\MODEL";

                    bool result = manager.ExportNodeImage(
                    input                                   /* INPUT : VIZ */
                    , output                                /* OUTPUT : IMAGE */
                    , 600                                   /* IMAGE WIDTH */
                    , 480                                   /* IMAGE HEIGHT */
                    , VIZPub.NET.ViewDirections.ISO_PLUS    /* VIEW DIRECTION */
                    , VIZPub.NET.ImageFormats.PNG           /* OUTPUT FORMAT */
                    , VIZPub.NET.ExportNameFormats.NODE_ID  /* FILE NAME FORMAT  */
                    );

                    System.Diagnostics.Debug.WriteLine(
                    string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds)
                    );
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(
                    string.Format("{0} : {1}", e.Mode, e.Progress)
                    );
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ExportSimplifiedModel" collapsible="true">
                <code-block lang="c#">
                    public bool ExportSimplifiedModel(
                    string input,   //VIZ 파일 경로
                    string output   //간소화 VIZ 파일 경로
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void Example()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    string input = "C:\\MODEL\\BLOCK.viz";
                    string output = "C:\\MODEL\\BLOCK_SIMPLIFY.viz";

                    bool result = manager.ExportSimplifiedModel(
                    input                                       /* INPUT : VIZ */
                    , output                                    /* OUTPUT : VIZ */
                    , false                                     /* LIMIT BOUNDBOX */
                    , 0, 0, 0                                   /* MINIMUM VERTEX */
                    , 0, 0, 0                                   /* MAXIMUM VERTEX */
                    , false                                     /* LIMIT TRIANGLE-MESH COUNT */
                    , 0                                         /* TRIANGLE-MESH COUNT */
                    , VIZPub.NET.SimplifiedUnit.TRIANGLE_MESH   /* SIMPLIFY UNIT */
                    , false                                     /* KEEP STRUCTURE */
                    , true                                      /* USE NEW OPENGL HIDDEN WINDOW */
                    );

                    System.Diagnostics.Debug.WriteLine(
                    string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds)
                    );
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(
                    string.Format("{0} : {1}", e.Mode, e.Progress)
                    );
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ExportSimplifiedModel - 간소화 단위 옵션" collapsible="true">
                <code-block lang="c#">
                    public bool ExportSimplifiedModel(
                    string input,   //VIZ 파일 경로
                    string output,   //간소화 VIZ 파일 경로
                    SimplifiedUnit unit   //간소화 단위
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void Example()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    string input = "C:\\MODEL\\BLOCK.viz";
                    string output = "C:\\MODEL\\BLOCK_SIMPLIFY.viz";

                    bool result = manager.ExportSimplifiedModel(
                    input                                       /* INPUT : VIZ */
                    , output                                    /* OUTPUT : VIZ */
                    , false                                     /* LIMIT BOUNDBOX */
                    , 0, 0, 0                                   /* MINIMUM VERTEX */
                    , 0, 0, 0                                   /* MAXIMUM VERTEX */
                    , false                                     /* LIMIT TRIANGLE-MESH COUNT */
                    , 0                                         /* TRIANGLE-MESH COUNT */
                    , VIZPub.NET.SimplifiedUnit.TRIANGLE_MESH   /* SIMPLIFY UNIT */
                    , false                                     /* KEEP STRUCTURE */
                    , true                                      /* USE NEW OPENGL HIDDEN WINDOW */
                    );

                    System.Diagnostics.Debug.WriteLine(
                    string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds)
                    );
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(
                    string.Format("{0} : {1}", e.Mode, e.Progress)
                    );
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ExportSimplifiedModel - 트리 보존 유무 옵션" collapsible="true">
                <code-block lang="c#">
                    public bool ExportSimplifiedModel(
                    string input,   //VIZ 파일 경로
                    string output,   //간소화 VIZ 파일 경로
                    SimplifiedUnit unit,   //간소화 단위
                    bool preserveStructure//트리 구조 보존 유무
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void Example()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    string input = "C:\\MODEL\\BLOCK.viz";
                    string output = "C:\\MODEL\\BLOCK_SIMPLIFY.viz";

                    bool result = manager.ExportSimplifiedModel(
                    input                                       /* INPUT : VIZ */
                    , output                                    /* OUTPUT : VIZ */
                    , false                                     /* LIMIT BOUNDBOX */
                    , 0, 0, 0                                   /* MINIMUM VERTEX */
                    , 0, 0, 0                                   /* MAXIMUM VERTEX */
                    , false                                     /* LIMIT TRIANGLE-MESH COUNT */
                    , 0                                         /* TRIANGLE-MESH COUNT */
                    , VIZPub.NET.SimplifiedUnit.TRIANGLE_MESH   /* SIMPLIFY UNIT */
                    , false                                     /* KEEP STRUCTURE */
                    , true                                      /* USE NEW OPENGL HIDDEN WINDOW */
                    );

                    System.Diagnostics.Debug.WriteLine(
                    string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds)
                    );
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(
                    string.Format("{0} : {1}", e.Mode, e.Progress)
                    );
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ExportSimplifiedModel - OpenGL Window 옵션" collapsible="true">
                <code-block lang="c#">
                    public bool ExportSimplifiedModel(
                    string input,   //VIZ 파일 경로
                    string output,   //간소화 VIZ 파일 경로
                    SimplifiedUnit unit,    //간소화 단위
                    bool preserveStructure, //트리 구조 보존 유무
                    bool newOpenGlWnd       //새로운 OpenGL Window를 활용한 변환 기능 사용 유무
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void Example()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    string input = "C:\\MODEL\\BLOCK.viz";
                    string output = "C:\\MODEL\\BLOCK_SIMPLIFY.viz";

                    bool result = manager.ExportSimplifiedModel(
                    input                                       /* INPUT : VIZ */
                    , output                                    /* OUTPUT : VIZ */
                    , false                                     /* LIMIT BOUNDBOX */
                    , 0, 0, 0                                   /* MINIMUM VERTEX */
                    , 0, 0, 0                                   /* MAXIMUM VERTEX */
                    , false                                     /* LIMIT TRIANGLE-MESH COUNT */
                    , 0                                         /* TRIANGLE-MESH COUNT */
                    , VIZPub.NET.SimplifiedUnit.TRIANGLE_MESH   /* SIMPLIFY UNIT */
                    , false                                     /* KEEP STRUCTURE */
                    , true                                      /* USE NEW OPENGL HIDDEN WINDOW */
                    );

                    System.Diagnostics.Debug.WriteLine(
                    string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds)
                    );
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(
                    string.Format("{0} : {1}", e.Mode, e.Progress)
                    );
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ExportSimplifiedModel - 바운드 박스" collapsible="true">
                <code-block lang="c#">
                    public bool ExportSimplifiedModel(
                    string input,       //VIZ 파일 경로
                    string output,      //간소화 VIZ 파일 경로
                    bool limitBoundBox, //BoundBox 제한 여부
                    int minX,   //BoundBox - Min. X
                    int minY,   //BoundBox - Min. Y
                    int minZ,   //BoundBox - Min. Z
                    int maxY,   //BoundBox - Max. X
                    int maxZ,   //BoundBox - Max. Y
                    int maxX,   //BoundBox - Max. Z
                    bool limitTriangleCount,    //Triangle 개수 제한 여부
                    int triangleCount,      //최대 Triangle 개수
                    SimplifiedUnit unit,    //간소화 단위
                    bool preserveStructure //트리 구조 보존 유무
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void Example()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    string input = "C:\\MODEL\\BLOCK.viz";
                    string output = "C:\\MODEL\\BLOCK_SIMPLIFY.viz";

                    bool result = manager.ExportSimplifiedModel(
                    input                                       /* INPUT : VIZ */
                    , output                                    /* OUTPUT : VIZ */
                    , false                                     /* LIMIT BOUNDBOX */
                    , 0, 0, 0                                   /* MINIMUM VERTEX */
                    , 0, 0, 0                                   /* MAXIMUM VERTEX */
                    , false                                     /* LIMIT TRIANGLE-MESH COUNT */
                    , 0                                         /* TRIANGLE-MESH COUNT */
                    , VIZPub.NET.SimplifiedUnit.TRIANGLE_MESH   /* SIMPLIFY UNIT */
                    , false                                     /* KEEP STRUCTURE */
                    , true                                      /* USE NEW OPENGL HIDDEN WINDOW */
                    );

                    System.Diagnostics.Debug.WriteLine(
                    string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds)
                    );
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(
                    string.Format("{0} : {1}", e.Mode, e.Progress)
                    );
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ExportSimplifiedModel - 바운드 박스 + OpenGL Window 옵션" collapsible="true">
                <code-block lang="c#">
                    public bool ExportSimplifiedModel(
                    string input,       //VIZ 파일 경로
                    string output,      //간소화 VIZ 파일 경로
                    bool limitBoundBox, //BoundBox 제한 여부
                    int minX,   //BoundBox - Min. X
                    int minY,   //BoundBox - Min. Y
                    int minZ,   //BoundBox - Min. Z
                    int maxY,   //BoundBox - Max. X
                    int maxZ,   //BoundBox - Max. Y
                    int maxX,   //BoundBox - Max. Z
                    bool limitTriangleCount,    //Triangle 개수 제한 여부
                    int triangleCount,      //최대 Triangle 개수
                    SimplifiedUnit unit,    //간소화 단위
                    bool preserveStructure, //트리 구조 보존 유무
                    bool newOpenGlWnd       //새로운 OpenGL Window를 활용한 변환 기능 사용 유무
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void Example()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    string input = "C:\\MODEL\\BLOCK.viz";
                    string output = "C:\\MODEL\\BLOCK_SIMPLIFY.viz";

                    bool result = manager.ExportSimplifiedModel(
                    input                                       /* INPUT : VIZ */
                    , output                                    /* OUTPUT : VIZ */
                    , false                                     /* LIMIT BOUNDBOX */
                    , 0, 0, 0                                   /* MINIMUM VERTEX */
                    , 0, 0, 0                                   /* MAXIMUM VERTEX */
                    , false                                     /* LIMIT TRIANGLE-MESH COUNT */
                    , 0                                         /* TRIANGLE-MESH COUNT */
                    , VIZPub.NET.SimplifiedUnit.TRIANGLE_MESH   /* SIMPLIFY UNIT */
                    , false                                     /* KEEP STRUCTURE */
                    , true                                      /* USE NEW OPENGL HIDDEN WINDOW */
                    );

                    System.Diagnostics.Debug.WriteLine(
                    string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds)
                    );
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(
                    string.Format("{0} : {1}", e.Mode, e.Progress)
                    );
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ExportVIZ - 병합" collapsible="true">
                <code-block lang="c#">
                    public bool ExportVIZ(
                    List&lt;string&gt; input,   //병합할 VIZ 파일 목록
                    string output               //저장할 VIZ 파일 경로
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void ExportVIZ()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    // Write VIZ File Version
                    manager.Version = VIZPub.NET.FileVersion.V303;

                    // EDGE
                    manager.ReadEdgeData = true;

                    // Thumbnail
                    manager.ThumbnailGeneration = true;

                    List&lt;string&gt; input = new List&lt;string&gt;();
                    input.Add("C:\\MODEL\\BLOCK1.viz");
                    input.Add("C:\\MODEL\\BLOCK2.viz");
                    input.Add("C:\\MODEL\\BLOCK3.viz");
                    input.Add("C:\\MODEL\\BLOCK4.viz");

                    string output = "C:\\MODEL\\SHIP.viz";

                    bool result = manager.ExportVIZ(input, output);

                    System.Diagnostics.Debug.WriteLine(string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds));
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(string.Format("{0} : {1}", e.Mode, e.Progress));
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ExportVIZ" collapsible="true">
                <code-block lang="c#">
                    public bool ExportVIZ(
                    string input,   //CAD 모델 경로
                    string output   //VIZ 파일 경로
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void ExportVIZ()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    // Write VIZ File Version
                    manager.Version = VIZPub.NET.FileVersion.V303;

                    // EDGE
                    manager.EdgeDataGeneration = true;
                    manager.ReadEdgeData = true;

                    // Thumbnail
                    manager.ThumbnailGeneration = true;

                    // Cylinder
                    manager.CylinderSideCountNormal = 12;
                    manager.CylinderSideCountSmall = 6;

                    // Structure
                    manager.StructureMergeOption = VIZPub.NET.StructureMergeOptions.AsIs;

                    // Node Name (Delete Slash)
                    manager.NodeNameSlashDeleteOption = false;

                    string input = "C:\\MODEL\\submarine.rvm";
                    string output = "C:\\MODEL\\submarine.viz";

                    bool result = manager.ExportVIZ(input, output);

                    System.Diagnostics.Debug.WriteLine(string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds));
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(string.Format("{0} : {1}", e.Mode, e.Progress));
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ExportVIZ - 병합 Rule" collapsible="true">
                <code-block lang="c#">
                    public bool ExportVIZ(
                    string input,       //CAD 모델 경로
                    string mergeRule,   //병합 Rule XML 파일
                    string output       //VIZ 파일 경로
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void Example()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    string input = "C:\\MODEL\\BLOCK.rvm";
                    string output = "C:\\MODEL\\BLOCK.viz";
                    string mergeRuleXml = "C:\\MODEL\\BLOCK.xml";

                    bool result = manager.ExportVIZ(
                    input           /* INPUT : CAD */
                    , mergeRuleXml  /* MERGE RULE FILE : XML */
                    , output        /* OUTPUT : VIZ */
                    );

                    System.Diagnostics.Debug.WriteLine(
                    string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds)
                    );
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(
                    string.Format("{0} : {1}", e.Mode, e.Progress)
                    );
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ExportVIZM" collapsible="true">
                <code-block lang="c#">
                    public bool ExportVIZM(
                    string input,   //CAD 모델 경로
                    string output   //VIZM 파일 경로
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void Example()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    // Write VIZ File Version
                    manager.Version = VIZPub.NET.FileVersion.V303;

                    // EDGE
                    manager.EdgeDataGeneration = true;
                    manager.ReadEdgeData = true;

                    // Thumbnail
                    manager.ThumbnailGeneration = true;

                    // Cylinder
                    manager.CylinderSideCountNormal = 12;
                    manager.CylinderSideCountSmall = 6;

                    // Structure
                    manager.StructureMergeOption = VIZPub.NET.StructureMergeOptions.AsIs;

                    // Node Name (Delete Slash)
                    manager.NodeNameSlashDeleteOption = false;

                    string input = "C:\\MODEL\\submarine.rvm";
                    string output = "C:\\MODEL\\submarine.vizm";

                    bool result = manager.ExportVIZM(input, output);

                    System.Diagnostics.Debug.WriteLine(string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds));
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(string.Format("{0} : {1}", e.Mode, e.Progress));
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ExportVIZW" collapsible="true">
                <code-block lang="c#">
                    public bool ExportVIZW(
                    string input,   //CAD 모델 경로
                    string output   //VIZW 파일 경로
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void Example()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    // Write VIZ File Version
                    manager.Version = VIZPub.NET.FileVersion.V303;

                    // EDGE
                    manager.EdgeDataGeneration = true;
                    manager.ReadEdgeData = true;

                    // Thumbnail
                    manager.ThumbnailGeneration = true;

                    // Cylinder
                    manager.CylinderSideCountNormal = 12;
                    manager.CylinderSideCountSmall = 6;

                    // Structure
                    manager.StructureMergeOption = VIZPub.NET.StructureMergeOptions.AsIs;

                    // Node Name (Delete Slash)
                    manager.NodeNameSlashDeleteOption = false;

                    string input = "C:\\MODEL\\submarine.rvm";
                    string output = "C:\\MODEL\\submarine.vizw";

                    bool result = manager.ExportVIZW(input, output);

                    System.Diagnostics.Debug.WriteLine(string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds));
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(string.Format("{0} : {1}", e.Mode, e.Progress));
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ImportAttribute - 속성 정보 이용" collapsible="true">
                <code-block lang="c#">
                    public bool ImportAttribute(
                    string input,       //속성을 포함시킬 VIZ 파일
                    List&lt;AttributeItem&gt; attribute,    //속성 정보
                    string output       //속성이 포함되어 저장될 VIZ 파일
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void Example()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    string input = "C:\\MODEL\\SAMPLE_NO_ATT.viz";
                    string output = "C:\\MODEL\\SAMPLE_ATT.viz";

                    List&lt;VIZPub.NET.AttributeItem&gt; items = new List&lt;VIZPub.NET.AttributeItem&gt;();

                    items.Add(new VIZPub.NET.AttributeItem(10, "TYPE", "PIPE"));
                    items.Add(new VIZPub.NET.AttributeItem(15, "TYPE", "PIPE"));
                    items.Add(new VIZPub.NET.AttributeItem(29, "TYPE", "PIPE"));
                    items.Add(new VIZPub.NET.AttributeItem(40, "TYPE", "PIPE"));

                    items.Add(new VIZPub.NET.AttributeItem(43, "TYPE", "EQUIP"));
                    items.Add(new VIZPub.NET.AttributeItem(45, "TYPE", "EQUIP"));
                    items.Add(new VIZPub.NET.AttributeItem(48, "TYPE", "EQUIP"));
                    items.Add(new VIZPub.NET.AttributeItem(52, "TYPE", "EQUIP"));

                    bool result = manager.ImportAttribute(
                    input       /* INPUT : VIZ */
                    , items     /* ATTRIBUTE DATA */
                    , output    /* OUTPUT : VIZ */
                    );

                    System.Diagnostics.Debug.WriteLine(
                    string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds)
                    );
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(
                    string.Format("{0} : {1}", e.Mode, e.Progress)
                    );
                    }
                    }
                    }
                </code-block>
            </def>
            <def title="ImportAttribute - 속성 파일 이용" collapsible="true">
                <code-block lang="c#">
                    public bool ImportAttribute(
                    string input,       //속성을 포함시킬 VIZ 파일
                    string attribute,   //속성 파일
                    string output       //속성이 포함되어 저장될 VIZ 파일
                    )
                </code-block>
                <p>Example</p>
                <code-block lang="c#" collapsible="true">
                    using System;
                    using System.Collections.Generic;
                    using System.Linq;
                    using System.Text;

                    namespace Examples
                    {
                    public class VIZPubExample
                    {
                    public void Example()
                    {
                    // Initialize VIZPub.NET
                    VIZPub.NET.ModuleInitializer.Run();

                    // Construction
                    VIZPub.NET.PublishManager manager = new VIZPub.NET.PublishManager();

                    // License
                    VIZPub.NET.LicenseManager.LicenseResults authResult
                    = manager.License.LicenseFile("C:\\License\\VIZPub.NET.lic");

                    if (authResult != VIZPub.NET.LicenseManager.LicenseResults.SUCCESS)
                    {
                    System.Diagnostics.Debug.WriteLine(authResult.ToString());
                    return;
                    }

                    // Event :: Progress
                    manager.OnProgressChangedEvent += VIZPub_OnProgressChangedEvent;

                    string input = "C:\\MODEL\\SAMPLE_NO_ATT.viz";
                    string output = "C:\\MODEL\\SAMPLE.viz";
                    string input_attribute = "C:\\MODEL\\SAMPLE.txt";

                    bool result = manager.ImportAttribute(
                    input               /* INPUT : VIZ */
                    , input_attribute   /* INPUT : ATTRIBUTE */
                    , output            /* OUTPUT : VIZ + ATTRIBUTE */
                    );

                    System.Diagnostics.Debug.WriteLine(
                    string.Format("Elapsed Milliseconds = {0:#,0}", manager.ElapsedMilliseconds)
                    );
                    }

                    private void VIZPub_OnProgressChangedEvent(object sender, VIZPub.NET.ProgressEventArgs e)
                    {
                    System.Diagnostics.Debug.WriteLine(
                    string.Format("{0} : {1}", e.Mode, e.Progress)
                    );
                    }
                    }
                    }
                </code-block>
            </def>
        </deflist>
    </chapter>
</topic>